{{ 'product-gallery.css' | asset_url | stylesheet_tag }}
{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="gallery isolate{% unless section.settings.full_width %} page-width{% endunless %} section-{{ section.id }}-padding">
    <div class="theme__title gallery__title">
      <h2 class="gallery__heading title h1">
        {{ section.settings.heading }}
      </h2>
    </div>
    <div
      class="gallery__container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
      {{ block.shopify_attributes }}
      {% if settings.animations_reveal_on_scroll %}
        data-cascade
        style="--animation-order: {{ forloop.index }};"
      {% endif %}
    >
      <div class="gallery__wrapper swiper-wrapper">
        {%- for block in section.blocks -%}
          <div
            class="swiper-slide grid__item{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}"
          >
            <div class="galery-item content-container">
              {%- if block.settings.image != blank -%}
                <div class="galery-item__image-wrapper galery-item__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} galery-item-spacing{% endif %}">
                  <div class="media media--transparent media--portrait">
                    {%- liquid
                      assign number_of_columns = section.settings.columns_desktop
                      assign number_of_columns_mobile = section.settings.columns_mobile
                      assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                      if section.settings.image_width == 'half'
                        assign image_width = 0.5
                      elsif section.settings.image_width == 'third'
                        assign image_width = 0.33
                      else
                        assign image_width = 1
                      endif
                    -%}
                    {% capture sizes %}
                      (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                      (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                      (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                      calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                    {% endcapture %}
                    {{
                      block.settings.image
                      | image_url: width: 3200
                      | image_tag:
                        loading: 'lazy',
                        widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                        sizes: sizes,
                        class: 'galery-item__image'
                    }}
                  </div>
                </div>
              {%- endif -%}
              <div class="galery-item__info">
                {%- if block.settings.title != blank -%}
                  <h3 class="inline-richtext">{{ block.settings.title }}</h3>
                {%- endif -%}
              </div>
            </div>
          </div>
        {%- endfor -%}
      </div>
      <!-- If we need navigation buttons -->
      <div class="swiper-button-prev gallery__navigation-button"><span class="sr-only">prev</span></div>
      <div class="swiper-button-next gallery__navigation-button"><span class="sr-only">next</span></div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Product Gallery",
  "class": "section",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "The Gallery",
      "info": "Section title  example : Our Gallery"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Width",
      "default": true
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "photo",
      "name": "Photo",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "default": "Column",
          "label": "t:sections.multicolumn.blocks.column.settings.title.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Gallery",
      "blocks": [
        {
          "type": "photo"
        },
        {
          "type": "photo"
        },
        {
          "type": "photo"
        },
        {
          "type": "photo"
        }
      ]
    }
  ]
}
{% endschema %}
